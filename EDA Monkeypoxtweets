{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "PROYECTO FINAL MINER√çA DE DATOS - YANINA L√ìPEZ: Percepci√≥n de la comunidad en twitter sobre la viruela del Mono"
      ],
      "metadata": {
        "id": "t7KTOdem3qLr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#import numpy as np\n",
        "import pandas as pd\n",
        "#from os import path\n",
        "#from PIL import Image\n",
        "from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n",
        "from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n",
        "import matplotlib.pyplot as plt\n",
        "import plotly.express as px\n",
        "import nltk\n",
        "nltk.download('stopwords')\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.sentiment import SentimentIntensityAnalyzer\n",
        "import glob\n",
        "nltk.download('vader_lexicon')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AhFoXIOf33qe",
        "outputId": "71cd733b-a13d-40f0-b907-844aeca06b41"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/stopwords.zip.\n",
            "[nltk_data] Downloading package vader_lexicon to /root/nltk_data...\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mpox1=pd.read_csv(\"mpox-08-19-2022.csv\",index_col=0)\n",
        "mpox1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        },
        "id": "OAsyCsXz6hgb",
        "outputId": "a7cf3541-f1df-4129-bda1-e96675c45551"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             date      time                   id  \\\n",
              "0      2022-08-19  21:47:43  1560624556175343617   \n",
              "1      2022-08-19  21:47:38  1560624535283589123   \n",
              "2      2022-08-19  21:47:38  1560624532838182913   \n",
              "3      2022-08-19  21:47:35  1560624522176434177   \n",
              "4      2022-08-19  21:47:33  1560624514651791366   \n",
              "...           ...       ...                  ...   \n",
              "10010  2022-08-19  06:41:28  1560396491390439425   \n",
              "10011  2022-08-19  06:41:25  1560396475980517377   \n",
              "10012  2022-08-19  06:41:21  1560396459869999104   \n",
              "10013  2022-08-19  06:41:16  1560396438026088450   \n",
              "10014  2022-08-19  06:41:14  1560396432514990082   \n",
              "\n",
              "                                                   tweet language  \\\n",
              "0        @ArtValley818_ Is his spirit animal monkey pox?       en   \n",
              "1      @Sara_inquirer Hindsight is 20/20. And can pro...       en   \n",
              "2      @OHAOregon Any time a child gets monkey pox I ...       en   \n",
              "3      [ICYMI] WATCH | Phaahla confirms fifth Monkeyp...       en   \n",
              "4      Monkeypox cancels free concert held at Souther...       en   \n",
              "...                                                  ...      ...   \n",
              "10010  Yo soy muy positivo pero tengo los pies sobre ...       es   \n",
              "10011               @therobanda Listo para el monkeypox?       da   \n",
              "10012  REAGEN released Monkeypox Antigen Rapid Testin...       en   \n",
              "10013  Hi there üòÅ. I can help with your assignment or...       en   \n",
              "10014  US Offers Extra Monkeypox Vaccine Doses for Ga...       en   \n",
              "\n",
              "       replies_count  retweets_count  likes_count  \n",
              "0                  0               0            0  \n",
              "1                  0               0            0  \n",
              "2                  0               0            0  \n",
              "3                  0               0            0  \n",
              "4                  0               0            0  \n",
              "...              ...             ...          ...  \n",
              "10010              0               0            0  \n",
              "10011              0               0            0  \n",
              "10012              0               1            1  \n",
              "10013              0               1            0  \n",
              "10014              1               0            2  \n",
              "\n",
              "[10015 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c34c932-32f1-4349-bd67-17e5aa2e2b68\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>time</th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>language</th>\n",
              "      <th>replies_count</th>\n",
              "      <th>retweets_count</th>\n",
              "      <th>likes_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:43</td>\n",
              "      <td>1560624556175343617</td>\n",
              "      <td>@ArtValley818_ Is his spirit animal monkey pox?</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:38</td>\n",
              "      <td>1560624535283589123</td>\n",
              "      <td>@Sara_inquirer Hindsight is 20/20. And can pro...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:38</td>\n",
              "      <td>1560624532838182913</td>\n",
              "      <td>@OHAOregon Any time a child gets monkey pox I ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:35</td>\n",
              "      <td>1560624522176434177</td>\n",
              "      <td>[ICYMI] WATCH | Phaahla confirms fifth Monkeyp...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:33</td>\n",
              "      <td>1560624514651791366</td>\n",
              "      <td>Monkeypox cancels free concert held at Souther...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10010</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:28</td>\n",
              "      <td>1560396491390439425</td>\n",
              "      <td>Yo soy muy positivo pero tengo los pies sobre ...</td>\n",
              "      <td>es</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10011</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:25</td>\n",
              "      <td>1560396475980517377</td>\n",
              "      <td>@therobanda Listo para el monkeypox?</td>\n",
              "      <td>da</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10012</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:21</td>\n",
              "      <td>1560396459869999104</td>\n",
              "      <td>REAGEN released Monkeypox Antigen Rapid Testin...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10013</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:16</td>\n",
              "      <td>1560396438026088450</td>\n",
              "      <td>Hi there üòÅ. I can help with your assignment or...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10014</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:14</td>\n",
              "      <td>1560396432514990082</td>\n",
              "      <td>US Offers Extra Monkeypox Vaccine Doses for Ga...</td>\n",
              "      <td>en</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10015 rows √ó 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c34c932-32f1-4349-bd67-17e5aa2e2b68')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9c34c932-32f1-4349-bd67-17e5aa2e2b68 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9c34c932-32f1-4349-bd67-17e5aa2e2b68');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv_paths = glob.glob('./*csv')\n",
        "csv_paths"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IKlHLExKaqsV",
        "outputId": "1b312b75-ab25-40b8-c894-f168f32c98ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['./mpox-08-23-2022.csv',\n",
              " './mpox-09-02-2022.csv',\n",
              " './mpox-09-03-2022.csv',\n",
              " './mpox-08-20-2022.csv',\n",
              " './mpox-08-19-2022.csv',\n",
              " './mpox-08-22-2022.csv',\n",
              " './mpox-08-31-2022.csv',\n",
              " './mpox-08-29-2022.csv',\n",
              " './mpox-08-26-2022.csv',\n",
              " './mpox-08-27-2022.csv',\n",
              " './mpox-08-30-2022.csv',\n",
              " './mpox-08-24-2022.csv',\n",
              " './mpox-09-01-2022.csv',\n",
              " './mpox-08-21-2022.csv',\n",
              " './mpox-08-25-2022.csv']"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Mpox = pd.read_csv(csv_paths[0],index_col=0)\n",
        "Mpox.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "By6sbeQBbDRx",
        "outputId": "7aea52b6-b57c-4f2b-ba58-f7e13601cf65"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         date      time                   id  \\\n",
              "0  2022-08-23  23:27:59  1562099340121980929   \n",
              "1  2022-08-23  23:27:30  1562099216188678144   \n",
              "2  2022-08-23  23:27:30  1562099215957987328   \n",
              "3  2022-08-23  23:27:24  1562099191836467200   \n",
              "4  2022-08-23  23:27:19  1562099169413763072   \n",
              "\n",
              "                                               tweet language  replies_count  \\\n",
              "0  @larryd5674 @John_Kass @chicagosmayor @SAKimFo...       en              0   \n",
              "1  Monkeypox: An explainer and research¬†roundup  ...       en              0   \n",
              "2  About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...       en              0   \n",
              "3  La monkey pox lleg√≥ a la comunidad gay porn st...       es              0   \n",
              "4  Many like to see the U.S. as one of the most a...       en              0   \n",
              "\n",
              "   retweets_count  likes_count  \n",
              "0               0            0  \n",
              "1               0            0  \n",
              "2               0            0  \n",
              "3               0            0  \n",
              "4               0            0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-28f9349a-6cda-4763-9795-9acb86810267\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>time</th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>language</th>\n",
              "      <th>replies_count</th>\n",
              "      <th>retweets_count</th>\n",
              "      <th>likes_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:59</td>\n",
              "      <td>1562099340121980929</td>\n",
              "      <td>@larryd5674 @John_Kass @chicagosmayor @SAKimFo...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:30</td>\n",
              "      <td>1562099216188678144</td>\n",
              "      <td>Monkeypox: An explainer and research¬†roundup  ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:30</td>\n",
              "      <td>1562099215957987328</td>\n",
              "      <td>About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:24</td>\n",
              "      <td>1562099191836467200</td>\n",
              "      <td>La monkey pox lleg√≥ a la comunidad gay porn st...</td>\n",
              "      <td>es</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:19</td>\n",
              "      <td>1562099169413763072</td>\n",
              "      <td>Many like to see the U.S. as one of the most a...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28f9349a-6cda-4763-9795-9acb86810267')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-28f9349a-6cda-4763-9795-9acb86810267 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-28f9349a-6cda-4763-9795-9acb86810267');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for csv_path in csv_paths[1:]:\n",
        "  df = pd.read_csv(csv_path,index_col=0)\n",
        "  Mpox = pd.concat([Mpox,df], axis=0, ignore_index=True)\n",
        "Mpox"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        },
        "id": "j9PFi5Rva8s-",
        "outputId": "98cab8c6-10c8-4876-94a0-42f1b753db4f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             date      time                   id  \\\n",
              "0      2022-08-23  23:27:59  1562099340121980929   \n",
              "1      2022-08-23  23:27:30  1562099216188678144   \n",
              "2      2022-08-23  23:27:30  1562099215957987328   \n",
              "3      2022-08-23  23:27:24  1562099191836467200   \n",
              "4      2022-08-23  23:27:19  1562099169413763072   \n",
              "...           ...       ...                  ...   \n",
              "91881  2022-08-25  08:00:01  1562590585608818688   \n",
              "91882  2022-08-25  08:00:01  1562590585071931392   \n",
              "91883  2022-08-25  08:00:01  1562590584535392258   \n",
              "91884  2022-08-25  08:00:01  1562590584203878400   \n",
              "91885  2022-08-25  08:00:00  1562590580718403584   \n",
              "\n",
              "                                                   tweet language  \\\n",
              "0      @larryd5674 @John_Kass @chicagosmayor @SAKimFo...       en   \n",
              "1      Monkeypox: An explainer and research¬†roundup  ...       en   \n",
              "2      About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...       en   \n",
              "3      La monkey pox lleg√≥ a la comunidad gay porn st...       es   \n",
              "4      Many like to see the U.S. as one of the most a...       en   \n",
              "...                                                  ...      ...   \n",
              "91881  Shasta County's Health and Human Services Agen...       en   \n",
              "91882  üî¨Getting on top of the #monkeypox outbreak mea...       en   \n",
              "91883  A treatment for #monkeypox was approved under ...       en   \n",
              "91884  While monkeypox is growing across the country,...       en   \n",
              "91885  An #Italian man was simultaneously infected wi...       en   \n",
              "\n",
              "       replies_count  retweets_count  likes_count  \n",
              "0                  0               0            0  \n",
              "1                  0               0            0  \n",
              "2                  0               0            0  \n",
              "3                  0               0            0  \n",
              "4                  0               0            0  \n",
              "...              ...             ...          ...  \n",
              "91881              0               0            0  \n",
              "91882              0               0            4  \n",
              "91883              0               0            1  \n",
              "91884              0               0            0  \n",
              "91885              0               1            4  \n",
              "\n",
              "[91886 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85b49ee2-6004-4e30-8497-d44d28b09499\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>time</th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>language</th>\n",
              "      <th>replies_count</th>\n",
              "      <th>retweets_count</th>\n",
              "      <th>likes_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:59</td>\n",
              "      <td>1562099340121980929</td>\n",
              "      <td>@larryd5674 @John_Kass @chicagosmayor @SAKimFo...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:30</td>\n",
              "      <td>1562099216188678144</td>\n",
              "      <td>Monkeypox: An explainer and research¬†roundup  ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:30</td>\n",
              "      <td>1562099215957987328</td>\n",
              "      <td>About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:24</td>\n",
              "      <td>1562099191836467200</td>\n",
              "      <td>La monkey pox lleg√≥ a la comunidad gay porn st...</td>\n",
              "      <td>es</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-08-23</td>\n",
              "      <td>23:27:19</td>\n",
              "      <td>1562099169413763072</td>\n",
              "      <td>Many like to see the U.S. as one of the most a...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91881</th>\n",
              "      <td>2022-08-25</td>\n",
              "      <td>08:00:01</td>\n",
              "      <td>1562590585608818688</td>\n",
              "      <td>Shasta County's Health and Human Services Agen...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91882</th>\n",
              "      <td>2022-08-25</td>\n",
              "      <td>08:00:01</td>\n",
              "      <td>1562590585071931392</td>\n",
              "      <td>üî¨Getting on top of the #monkeypox outbreak mea...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91883</th>\n",
              "      <td>2022-08-25</td>\n",
              "      <td>08:00:01</td>\n",
              "      <td>1562590584535392258</td>\n",
              "      <td>A treatment for #monkeypox was approved under ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91884</th>\n",
              "      <td>2022-08-25</td>\n",
              "      <td>08:00:01</td>\n",
              "      <td>1562590584203878400</td>\n",
              "      <td>While monkeypox is growing across the country,...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91885</th>\n",
              "      <td>2022-08-25</td>\n",
              "      <td>08:00:00</td>\n",
              "      <td>1562590580718403584</td>\n",
              "      <td>An #Italian man was simultaneously infected wi...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>91886 rows √ó 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85b49ee2-6004-4e30-8497-d44d28b09499')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-85b49ee2-6004-4e30-8497-d44d28b09499 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-85b49ee2-6004-4e30-8497-d44d28b09499');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Mpox['language'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xFtf4KxshKuK",
        "outputId": "dff37ff8-0a1a-4af0-9572-163060d513a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "en     79858\n",
              "pt      2324\n",
              "in      1923\n",
              "fr      1526\n",
              "tl      1421\n",
              "       ...  \n",
              "art        1\n",
              "bg         1\n",
              "ckb        1\n",
              "uk         1\n",
              "eu         1\n",
              "Name: language, Length: 61, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweet = Mpox['tweet']\n",
        "tweet"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "koBfvVpa7A-W",
        "outputId": "1e375b52-ce0e-49c7-d385-00e75f43ad37"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        @larryd5674 @John_Kass @chicagosmayor @SAKimFo...\n",
              "1        Monkeypox: An explainer and research¬†roundup  ...\n",
              "2        About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...\n",
              "3        La monkey pox lleg√≥ a la comunidad gay porn st...\n",
              "4        Many like to see the U.S. as one of the most a...\n",
              "                               ...                        \n",
              "91881    Shasta County's Health and Human Services Agen...\n",
              "91882    üî¨Getting on top of the #monkeypox outbreak mea...\n",
              "91883    A treatment for #monkeypox was approved under ...\n",
              "91884    While monkeypox is growing across the country,...\n",
              "91885    An #Italian man was simultaneously infected wi...\n",
              "Name: tweet, Length: 91886, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Mpox['tweet']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fP-5ISxkeKfo",
        "outputId": "8e5f7a0e-eb7c-4515-fa79-6c1e2489793f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        @larryd5674 @John_Kass @chicagosmayor @SAKimFo...\n",
              "1        Monkeypox: An explainer and research¬†roundup  ...\n",
              "2        About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...\n",
              "3        La monkey pox lleg√≥ a la comunidad gay porn st...\n",
              "4        Many like to see the U.S. as one of the most a...\n",
              "                               ...                        \n",
              "91881    Shasta County's Health and Human Services Agen...\n",
              "91882    üî¨Getting on top of the #monkeypox outbreak mea...\n",
              "91883    A treatment for #monkeypox was approved under ...\n",
              "91884    While monkeypox is growing across the country,...\n",
              "91885    An #Italian man was simultaneously infected wi...\n",
              "Name: tweet, Length: 91886, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mpox1['tweet'][0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "m8GV0soPe4wQ",
        "outputId": "80800bbe-8b4e-430b-f611-caa7047b2809"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'@ArtValley818_ Is his spirit animal monkey pox?'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Mpox['tweet']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HkoOsv81exk-",
        "outputId": "8e42c83f-2daa-47aa-bf2c-e3275d137a36"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        @larryd5674 @John_Kass @chicagosmayor @SAKimFo...\n",
              "1        Monkeypox: An explainer and research¬†roundup  ...\n",
              "2        About Monkeypox and HOCl makers‚Ä¶.I‚Äôm learning ...\n",
              "3        La monkey pox lleg√≥ a la comunidad gay porn st...\n",
              "4        Many like to see the U.S. as one of the most a...\n",
              "                               ...                        \n",
              "91881    Shasta County's Health and Human Services Agen...\n",
              "91882    üî¨Getting on top of the #monkeypox outbreak mea...\n",
              "91883    A treatment for #monkeypox was approved under ...\n",
              "91884    While monkeypox is growing across the country,...\n",
              "91885    An #Italian man was simultaneously infected wi...\n",
              "Name: tweet, Length: 91886, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweet=Mpox['tweet'][4]\n",
        "print(tweet)\n",
        "# Create and generate a word cloud image:\n",
        "wordcloud = WordCloud().generate(tweet)\n",
        "\n",
        "# Display the generated image:\n",
        "plt.imshow(wordcloud, interpolation='bilinear')\n",
        "plt.axis(\"off\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "id": "nwaugPx37dMe",
        "outputId": "538d0217-b453-47cc-d2d5-4b5d8bd78f24"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Many like to see the U.S. as one of the most advanced countries in the world, yet we lead the world with Covid and Monkeypox. Something is seriously wrong in our country.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tweet = \" \".join(review for review in Mpox.tweet)\n",
        "len(tweet)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f10Gm8xX8XXV",
        "outputId": "d0e3fbeb-ba70-4bba-861b-ebb9b9594bc0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12497830"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stopwords = set(STOPWORDS)\n",
        "stopwords.update([\"https\", \"co\", \"wine\", \"I\", \"t\"])\n",
        "stopwords"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PuGuuGNq8jhs",
        "outputId": "b7f509fd-b8e7-4076-98a3-8f4ab11adcbc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'I',\n",
              " 'a',\n",
              " 'about',\n",
              " 'above',\n",
              " 'after',\n",
              " 'again',\n",
              " 'against',\n",
              " 'all',\n",
              " 'also',\n",
              " 'am',\n",
              " 'an',\n",
              " 'and',\n",
              " 'any',\n",
              " 'are',\n",
              " \"aren't\",\n",
              " 'as',\n",
              " 'at',\n",
              " 'be',\n",
              " 'because',\n",
              " 'been',\n",
              " 'before',\n",
              " 'being',\n",
              " 'below',\n",
              " 'between',\n",
              " 'both',\n",
              " 'but',\n",
              " 'by',\n",
              " 'can',\n",
              " \"can't\",\n",
              " 'cannot',\n",
              " 'co',\n",
              " 'com',\n",
              " 'could',\n",
              " \"couldn't\",\n",
              " 'did',\n",
              " \"didn't\",\n",
              " 'do',\n",
              " 'does',\n",
              " \"doesn't\",\n",
              " 'doing',\n",
              " \"don't\",\n",
              " 'down',\n",
              " 'during',\n",
              " 'each',\n",
              " 'else',\n",
              " 'ever',\n",
              " 'few',\n",
              " 'for',\n",
              " 'from',\n",
              " 'further',\n",
              " 'get',\n",
              " 'had',\n",
              " \"hadn't\",\n",
              " 'has',\n",
              " \"hasn't\",\n",
              " 'have',\n",
              " \"haven't\",\n",
              " 'having',\n",
              " 'he',\n",
              " \"he'd\",\n",
              " \"he'll\",\n",
              " \"he's\",\n",
              " 'hence',\n",
              " 'her',\n",
              " 'here',\n",
              " \"here's\",\n",
              " 'hers',\n",
              " 'herself',\n",
              " 'him',\n",
              " 'himself',\n",
              " 'his',\n",
              " 'how',\n",
              " \"how's\",\n",
              " 'however',\n",
              " 'http',\n",
              " 'https',\n",
              " 'i',\n",
              " \"i'd\",\n",
              " \"i'll\",\n",
              " \"i'm\",\n",
              " \"i've\",\n",
              " 'if',\n",
              " 'in',\n",
              " 'into',\n",
              " 'is',\n",
              " \"isn't\",\n",
              " 'it',\n",
              " \"it's\",\n",
              " 'its',\n",
              " 'itself',\n",
              " 'just',\n",
              " 'k',\n",
              " \"let's\",\n",
              " 'like',\n",
              " 'me',\n",
              " 'more',\n",
              " 'most',\n",
              " \"mustn't\",\n",
              " 'my',\n",
              " 'myself',\n",
              " 'no',\n",
              " 'nor',\n",
              " 'not',\n",
              " 'of',\n",
              " 'off',\n",
              " 'on',\n",
              " 'once',\n",
              " 'only',\n",
              " 'or',\n",
              " 'other',\n",
              " 'otherwise',\n",
              " 'ought',\n",
              " 'our',\n",
              " 'ours',\n",
              " 'ourselves',\n",
              " 'out',\n",
              " 'over',\n",
              " 'own',\n",
              " 'r',\n",
              " 'same',\n",
              " 'shall',\n",
              " \"shan't\",\n",
              " 'she',\n",
              " \"she'd\",\n",
              " \"she'll\",\n",
              " \"she's\",\n",
              " 'should',\n",
              " \"shouldn't\",\n",
              " 'since',\n",
              " 'so',\n",
              " 'some',\n",
              " 'such',\n",
              " 't',\n",
              " 'than',\n",
              " 'that',\n",
              " \"that's\",\n",
              " 'the',\n",
              " 'their',\n",
              " 'theirs',\n",
              " 'them',\n",
              " 'themselves',\n",
              " 'then',\n",
              " 'there',\n",
              " \"there's\",\n",
              " 'therefore',\n",
              " 'these',\n",
              " 'they',\n",
              " \"they'd\",\n",
              " \"they'll\",\n",
              " \"they're\",\n",
              " \"they've\",\n",
              " 'this',\n",
              " 'those',\n",
              " 'through',\n",
              " 'to',\n",
              " 'too',\n",
              " 'under',\n",
              " 'until',\n",
              " 'up',\n",
              " 'very',\n",
              " 'was',\n",
              " \"wasn't\",\n",
              " 'we',\n",
              " \"we'd\",\n",
              " \"we'll\",\n",
              " \"we're\",\n",
              " \"we've\",\n",
              " 'were',\n",
              " \"weren't\",\n",
              " 'what',\n",
              " \"what's\",\n",
              " 'when',\n",
              " \"when's\",\n",
              " 'where',\n",
              " \"where's\",\n",
              " 'which',\n",
              " 'while',\n",
              " 'who',\n",
              " \"who's\",\n",
              " 'whom',\n",
              " 'why',\n",
              " \"why's\",\n",
              " 'wine',\n",
              " 'with',\n",
              " \"won't\",\n",
              " 'would',\n",
              " \"wouldn't\",\n",
              " 'www',\n",
              " 'you',\n",
              " \"you'd\",\n",
              " \"you'll\",\n",
              " \"you're\",\n",
              " \"you've\",\n",
              " 'your',\n",
              " 'yours',\n",
              " 'yourself',\n",
              " 'yourselves'}"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "stopwords = set(STOPWORDS)\n",
        "stopwords.update([\"https\", \"co\", \"wine\", \"I\",\"t\",\"the\",\"it\",\"monkeypox\",\"monkey\",\"will\",\"de\",\"s\",\"going\",\"say\",\"don\",\"cdc\"])\n",
        "\n",
        "# Generate a word cloud image\n",
        "wordcloud = WordCloud(stopwords=stopwords, background_color=\"white\").generate(tweet)\n",
        "\n",
        "# Display the generated image:\n",
        "# the matplotlib way:\n",
        "plt.imshow(wordcloud, interpolation='bilinear')\n",
        "plt.axis(\"off\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        },
        "id": "ufaG-7Mp81jc",
        "outputId": "42a44e98-7c54-4a18-815a-00e7166fd4fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Bigramas  ---One Word\n",
        "def get_top_n_words(corpus, n = None):\n",
        "    \n",
        "    vec = CountVectorizer().fit(corpus)\n",
        "    bag_of_words = vec.transform(corpus)\n",
        "    sum_words = bag_of_words.sum(axis = 0) \n",
        "    words_freq = [(word, sum_words[0, idx]) for word, idx in vec.vocabulary_.items()]\n",
        "    words_freq = sorted(words_freq, key = lambda x: x[1], reverse = True)\n",
        "    return words_freq[:n]\n",
        "\n",
        "#Most frequently occuring Bi-grams\n",
        "def get_top_n2_words(corpus, n = None): \n",
        "    vec1 = CountVectorizer(ngram_range = (2,2), max_features = 2000).fit(corpus)\n",
        "    bag_of_words = vec1.transform(corpus)\n",
        "    sum_words = bag_of_words.sum(axis = 0) \n",
        "    words_freq = [(word, sum_words[0, idx]) for word, idx in vec1.vocabulary_.items()]\n",
        "    words_freq = sorted(words_freq, key = lambda x: x[1], reverse = True)\n",
        "    return words_freq[:n]\n",
        "    \n",
        "#Most frequently occuring Tri-grams\n",
        "def get_top_n3_words(corpus, n = None):\n",
        "    vec1 = CountVectorizer(ngram_range = (3,3), max_features = 2000).fit(corpus) \n",
        "    bag_of_words = vec1.transform(corpus)\n",
        "    sum_words = bag_of_words.sum(axis = 0) \n",
        "    words_freq = [(word, sum_words[0, idx]) for word, idx in vec1.vocabulary_.items()]\n",
        "    words_freq = sorted(words_freq, key = lambda x: x[1], reverse=True)\n",
        "    return words_freq[:n]"
      ],
      "metadata": {
        "id": "OHJWV2JIGrM-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#stopwords.update([\"https\", \"co\", \"wine\", \"I\",\"t\",\"the\",\"it\",\"monkeypox\",\"monkey\",\"will\",\"de\",\"s\",\"going\",\"say\",\"don\",\"cdc\"])\n",
        "mpox1[\"tweet2\"] = mpox1[\"tweet\"].apply(lambda x: ' '.join([word for word in x.split() if word not in (stopwords)]))\n",
        "mpox1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 988
        },
        "id": "Ka5Z5DCcG2sp",
        "outputId": "65128cac-c93d-4712-f42d-3e63587d525d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             date      time                   id  \\\n",
              "0      2022-08-19  21:47:43  1560624556175343617   \n",
              "1      2022-08-19  21:47:38  1560624535283589123   \n",
              "2      2022-08-19  21:47:38  1560624532838182913   \n",
              "3      2022-08-19  21:47:35  1560624522176434177   \n",
              "4      2022-08-19  21:47:33  1560624514651791366   \n",
              "...           ...       ...                  ...   \n",
              "10010  2022-08-19  06:41:28  1560396491390439425   \n",
              "10011  2022-08-19  06:41:25  1560396475980517377   \n",
              "10012  2022-08-19  06:41:21  1560396459869999104   \n",
              "10013  2022-08-19  06:41:16  1560396438026088450   \n",
              "10014  2022-08-19  06:41:14  1560396432514990082   \n",
              "\n",
              "                                                   tweet language  \\\n",
              "0        @ArtValley818_ Is his spirit animal monkey pox?       en   \n",
              "1      @Sara_inquirer Hindsight is 20/20. And can pro...       en   \n",
              "2      @OHAOregon Any time a child gets monkey pox I ...       en   \n",
              "3      [ICYMI] WATCH | Phaahla confirms fifth Monkeyp...       en   \n",
              "4      Monkeypox cancels free concert held at Souther...       en   \n",
              "...                                                  ...      ...   \n",
              "10010  Yo soy muy positivo pero tengo los pies sobre ...       es   \n",
              "10011               @therobanda Listo para el monkeypox?       da   \n",
              "10012  REAGEN released Monkeypox Antigen Rapid Testin...       en   \n",
              "10013  Hi there üòÅ. I can help with your assignment or...       en   \n",
              "10014  US Offers Extra Monkeypox Vaccine Doses for Ga...       en   \n",
              "\n",
              "       replies_count  retweets_count  likes_count  \\\n",
              "0                  0               0            0   \n",
              "1                  0               0            0   \n",
              "2                  0               0            0   \n",
              "3                  0               0            0   \n",
              "4                  0               0            0   \n",
              "...              ...             ...          ...   \n",
              "10010              0               0            0   \n",
              "10011              0               0            0   \n",
              "10012              0               1            1   \n",
              "10013              0               1            0   \n",
              "10014              1               0            2   \n",
              "\n",
              "                                                  tweet2  \n",
              "0                   @ArtValley818_ Is spirit animal pox?  \n",
              "1      @Sara_inquirer Hindsight 20/20. And probably s...  \n",
              "2      @OHAOregon Any time child gets pox expect chil...  \n",
              "3      [ICYMI] WATCH | Phaahla confirms fifth Monkeyp...  \n",
              "4      Monkeypox cancels free concert held Southern D...  \n",
              "...                                                  ...  \n",
              "10010  Yo soy muy positivo pero tengo los pies sobre ...  \n",
              "10011               @therobanda Listo para el monkeypox?  \n",
              "10012  REAGEN released Monkeypox Antigen Rapid Testin...  \n",
              "10013  Hi üòÅ. help assignment entire class. Contact me...  \n",
              "10014  US Offers Extra Monkeypox Vaccine Doses Gay Pr...  \n",
              "\n",
              "[10015 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3c7e4ae1-8abe-412d-b537-16095c4e4d0e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>time</th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>language</th>\n",
              "      <th>replies_count</th>\n",
              "      <th>retweets_count</th>\n",
              "      <th>likes_count</th>\n",
              "      <th>tweet2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:43</td>\n",
              "      <td>1560624556175343617</td>\n",
              "      <td>@ArtValley818_ Is his spirit animal monkey pox?</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>@ArtValley818_ Is spirit animal pox?</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:38</td>\n",
              "      <td>1560624535283589123</td>\n",
              "      <td>@Sara_inquirer Hindsight is 20/20. And can pro...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>@Sara_inquirer Hindsight 20/20. And probably s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:38</td>\n",
              "      <td>1560624532838182913</td>\n",
              "      <td>@OHAOregon Any time a child gets monkey pox I ...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>@OHAOregon Any time child gets pox expect chil...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:35</td>\n",
              "      <td>1560624522176434177</td>\n",
              "      <td>[ICYMI] WATCH | Phaahla confirms fifth Monkeyp...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>[ICYMI] WATCH | Phaahla confirms fifth Monkeyp...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>21:47:33</td>\n",
              "      <td>1560624514651791366</td>\n",
              "      <td>Monkeypox cancels free concert held at Souther...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Monkeypox cancels free concert held Southern D...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10010</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:28</td>\n",
              "      <td>1560396491390439425</td>\n",
              "      <td>Yo soy muy positivo pero tengo los pies sobre ...</td>\n",
              "      <td>es</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>Yo soy muy positivo pero tengo los pies sobre ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10011</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:25</td>\n",
              "      <td>1560396475980517377</td>\n",
              "      <td>@therobanda Listo para el monkeypox?</td>\n",
              "      <td>da</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>@therobanda Listo para el monkeypox?</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10012</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:21</td>\n",
              "      <td>1560396459869999104</td>\n",
              "      <td>REAGEN released Monkeypox Antigen Rapid Testin...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>REAGEN released Monkeypox Antigen Rapid Testin...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10013</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:16</td>\n",
              "      <td>1560396438026088450</td>\n",
              "      <td>Hi there üòÅ. I can help with your assignment or...</td>\n",
              "      <td>en</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>Hi üòÅ. help assignment entire class. Contact me...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10014</th>\n",
              "      <td>2022-08-19</td>\n",
              "      <td>06:41:14</td>\n",
              "      <td>1560396432514990082</td>\n",
              "      <td>US Offers Extra Monkeypox Vaccine Doses for Ga...</td>\n",
              "      <td>en</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>US Offers Extra Monkeypox Vaccine Doses Gay Pr...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10015 rows √ó 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3c7e4ae1-8abe-412d-b537-16095c4e4d0e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3c7e4ae1-8abe-412d-b537-16095c4e4d0e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3c7e4ae1-8abe-412d-b537-16095c4e4d0e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Unigram, Bigrams, trigrams\n",
        "#Convert most freq words to dataframe for plotting bar plot\n",
        "top_words = get_top_n_words(mpox1.tweet2, n=20)\n",
        "top_df = pd.DataFrame(top_words)\n",
        "top_df.columns=[\"Word\", \"Freq\"]\n",
        "top_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 677
        },
        "id": "fX25D2OIIGVi",
        "outputId": "1b485401-772e-4fb6-9981-a5e35b0b2fc2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Word  Freq\n",
              "0          co  5134\n",
              "1       https  5115\n",
              "2   monkeypox  4694\n",
              "3         pox  2207\n",
              "4     vaccine  1146\n",
              "5         the   970\n",
              "6       cases   947\n",
              "7       covid   914\n",
              "8          it   748\n",
              "9      monkey   747\n",
              "10        new   663\n",
              "11        men   661\n",
              "12     people   607\n",
              "13     health   602\n",
              "14      virus   593\n",
              "15        gay   577\n",
              "16        sex   554\n",
              "17        now   553\n",
              "18     spread   513\n",
              "19        amp   481"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4e93f204-28e8-4b09-b9c3-47f2152b368a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Word</th>\n",
              "      <th>Freq</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>co</td>\n",
              "      <td>5134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>https</td>\n",
              "      <td>5115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>monkeypox</td>\n",
              "      <td>4694</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>pox</td>\n",
              "      <td>2207</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>vaccine</td>\n",
              "      <td>1146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>the</td>\n",
              "      <td>970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>cases</td>\n",
              "      <td>947</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>covid</td>\n",
              "      <td>914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>it</td>\n",
              "      <td>748</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>monkey</td>\n",
              "      <td>747</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>new</td>\n",
              "      <td>663</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>men</td>\n",
              "      <td>661</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>people</td>\n",
              "      <td>607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>health</td>\n",
              "      <td>602</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>virus</td>\n",
              "      <td>593</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>gay</td>\n",
              "      <td>577</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>sex</td>\n",
              "      <td>554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>now</td>\n",
              "      <td>553</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>spread</td>\n",
              "      <td>513</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>amp</td>\n",
              "      <td>481</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e93f204-28e8-4b09-b9c3-47f2152b368a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4e93f204-28e8-4b09-b9c3-47f2152b368a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4e93f204-28e8-4b09-b9c3-47f2152b368a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top2_words = get_top_n2_words(mpox1.tweet2)\n",
        "top2_df = pd.DataFrame(top2_words)\n",
        "top2_df.columns=[\"Bi-gram\", \"Freq\"]\n",
        "print(top2_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RGA4VV89IfxS",
        "outputId": "424d71ef-31ca-4717-ebd0-c50f8e66ea52"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                  Bi-gram  Freq\n",
            "0                https co  5114\n",
            "1              monkey pox   724\n",
            "2         monkeypox https   289\n",
            "3       monkeypox vaccine   285\n",
            "4                 sex men   205\n",
            "...                   ...   ...\n",
            "1995           stage need     5\n",
            "1996             pox like     5\n",
            "1997             18 https     5\n",
            "1998         concern over     5\n",
            "1999  treatments vaccines     5\n",
            "\n",
            "[2000 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Barplot of most freq Tri-grams\n",
        "top3_words = get_top_n3_words(mpox1[\"tweet2\"])\n",
        "top3_df = pd.DataFrame(top3_words)\n",
        "top3_df.columns=[\"Tri-gram\", \"Freq\"]\n",
        "print(top3_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Rom8kWaWIns2",
        "outputId": "49f9e139-1bd9-4d44-c9ea-658689bff605"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                 Tri-gram  Freq\n",
            "0      monkeypox https co   289\n",
            "1          cases https co    93\n",
            "2     cacar monyet adalah    93\n",
            "3     monyet adalah salah    92\n",
            "4       adalah salah satu    92\n",
            "...                   ...   ...\n",
            "1995         nyt https co     4\n",
            "1996     reports https co     4\n",
            "1997  sheryl gay stolberg     4\n",
            "1998  gay stolberg sharon     4\n",
            "1999  https co dhmgqbpkfp     4\n",
            "\n",
            "[2000 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def sentiment(corpus):\n",
        "    sia = SentimentIntensityAnalyzer()\n",
        "    tweetdf=pd.DataFrame(corpus)\n",
        "    tweetdf.columns=['tweet']\n",
        "    tweetdf['score']=tweetdf.apply(lambda row : sia.polarity_scores(row['tweet']), axis = 1)\n",
        "    tweetdf=pd.concat([tweetdf.drop(['score'],axis=1),tweetdf['score'].apply(pd.Series)],axis=1)\n",
        " \n",
        "    def sentiment_result(compound):\n",
        "        if compound>=0.05:\n",
        "            return \"Positive\"\n",
        "        elif compound<=-0.05:\n",
        "            return \"Negative\"\n",
        "        else :\n",
        "            return \"Neutral\"\n",
        "  \n",
        "    tweetdf['sentiment']=tweetdf.apply(lambda row: sentiment_result(row['compound']),axis=1)\n",
        "    figsentiment=px.histogram(tweetdf,x='compound',title=\"Score histogram\")\n",
        "    figsentiment.write_html(\"figsentiment.html\")\n",
        "    tablesent=tweetdf[\"sentiment\"].value_counts()\n",
        "    sentimentbar=px.bar(y=tablesent,x=tablesent.index,title=\"Sentiment Analysis\")\n",
        "    sentimentbar.write_html(\"sentimentbar.html\")"
      ],
      "metadata": {
        "id": "tr4Bcl7NIw0i"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sentiment(mpox1[\"tweet\"])"
      ],
      "metadata": {
        "id": "2ref507CIzcQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "MkWU_3Zx1Q0D"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
